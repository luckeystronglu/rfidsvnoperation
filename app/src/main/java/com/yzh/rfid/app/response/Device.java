// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Device.proto

package com.yzh.rfid.app.response;

public final class Device {
  private Device() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DeviceMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DeviceMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *主键ID
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *读头ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    String getDeviceId();
    /**
     * <pre>
     *读头ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     *读头ID 10进制
     * </pre>
     *
     * <code>optional string deviceIdDecimal = 3;</code>
     */
    String getDeviceIdDecimal();
    /**
     * <pre>
     *读头ID 10进制
     * </pre>
     *
     * <code>optional string deviceIdDecimal = 3;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdDecimalBytes();

    /**
     * <pre>
     * 公司ID
     * </pre>
     *
     * <code>optional int64 companyId = 4;</code>
     */
    long getCompanyId();

    /**
     * <pre>
     *部门ID
     * </pre>
     *
     * <code>optional int64 officeId = 5;</code>
     */
    long getOfficeId();

    /**
     * <pre>
     *区域ID
     * </pre>
     *
     * <code>optional int64 areaId = 6;</code>
     */
    long getAreaId();

    /**
     * <pre>
     *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
     * </pre>
     *
     * <code>optional string deviceType = 7;</code>
     */
    String getDeviceType();
    /**
     * <pre>
     *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
     * </pre>
     *
     * <code>optional string deviceType = 7;</code>
     */
    com.google.protobuf.ByteString
        getDeviceTypeBytes();

    /**
     * <pre>
     *读头名称
     * </pre>
     *
     * <code>optional string deviceName = 8;</code>
     */
    String getDeviceName();
    /**
     * <pre>
     *读头名称
     * </pre>
     *
     * <code>optional string deviceName = 8;</code>
     */
    com.google.protobuf.ByteString
        getDeviceNameBytes();

    /**
     * <pre>
     *读头所在位置经度
     * </pre>
     *
     * <code>optional double latitude = 9;</code>
     */
    double getLatitude();

    /**
     * <pre>
     *读头所在位置纬度
     * </pre>
     *
     * <code>optional double longitude = 10;</code>
     */
    double getLongitude();

    /**
     * <pre>
     *读头所在位置的详细描述
     * </pre>
     *
     * <code>optional string deviceAddress = 11;</code>
     */
    String getDeviceAddress();
    /**
     * <pre>
     *读头所在位置的详细描述
     * </pre>
     *
     * <code>optional string deviceAddress = 11;</code>
     */
    com.google.protobuf.ByteString
        getDeviceAddressBytes();

    /**
     * <pre>
     *电池电量
     * </pre>
     *
     * <code>optional float battery = 12;</code>
     */
    float getBattery();

    /**
     * <pre>
     *是否低电
     * </pre>
     *
     * <code>optional bool isLowBattery = 13;</code>
     */
    boolean getIsLowBattery();

    /**
     * <pre>
     *温度
     * </pre>
     *
     * <code>optional float temperature = 14;</code>
     */
    float getTemperature();

    /**
     * <pre>
     *是否高温
     * </pre>
     *
     * <code>optional bool isHighTemperature = 15;</code>
     */
    boolean getIsHighTemperature();

    /**
     * <pre>
     *外电状态 - 0:外电, 1:电池
     * </pre>
     *
     * <code>optional int32 batteryStatus = 16;</code>
     */
    int getBatteryStatus();

    /**
     * <pre>
     *电池连接状态,0-未连接,1-已连接
     * </pre>
     *
     * <code>optional int32 isConnectBattery = 17;</code>
     */
    int getIsConnectBattery();

    /**
     * <pre>
     *IMEI号
     * </pre>
     *
     * <code>optional string deviceImei = 18;</code>
     */
    String getDeviceImei();
    /**
     * <pre>
     *IMEI号
     * </pre>
     *
     * <code>optional string deviceImei = 18;</code>
     */
    com.google.protobuf.ByteString
        getDeviceImeiBytes();

    /**
     * <pre>
     *IMSI号
     * </pre>
     *
     * <code>optional string deviceImsi = 19;</code>
     */
    String getDeviceImsi();
    /**
     * <pre>
     *IMSI号
     * </pre>
     *
     * <code>optional string deviceImsi = 19;</code>
     */
    com.google.protobuf.ByteString
        getDeviceImsiBytes();

    /**
     * <pre>
     *读头中的手机号
     * </pre>
     *
     * <code>optional string deviceMsisdn = 20;</code>
     */
    String getDeviceMsisdn();
    /**
     * <pre>
     *读头中的手机号
     * </pre>
     *
     * <code>optional string deviceMsisdn = 20;</code>
     */
    com.google.protobuf.ByteString
        getDeviceMsisdnBytes();

    /**
     * <pre>
     *软件版本
     * </pre>
     *
     * <code>optional string softwareVersion = 21;</code>
     */
    String getSoftwareVersion();
    /**
     * <pre>
     *软件版本
     * </pre>
     *
     * <code>optional string softwareVersion = 21;</code>
     */
    com.google.protobuf.ByteString
        getSoftwareVersionBytes();

    /**
     * <pre>
     *硬件版本
     * </pre>
     *
     * <code>optional string hardwareVersion = 22;</code>
     */
    String getHardwareVersion();
    /**
     * <pre>
     *硬件版本
     * </pre>
     *
     * <code>optional string hardwareVersion = 22;</code>
     */
    com.google.protobuf.ByteString
        getHardwareVersionBytes();

    /**
     * <pre>
     *协议版本
     * </pre>
     *
     * <code>optional string protocolVersion = 23;</code>
     */
    String getProtocolVersion();
    /**
     * <pre>
     *协议版本
     * </pre>
     *
     * <code>optional string protocolVersion = 23;</code>
     */
    com.google.protobuf.ByteString
        getProtocolVersionBytes();

    /**
     * <pre>
     *短信版本
     * </pre>
     *
     * <code>optional string smsVersion = 24;</code>
     */
    String getSmsVersion();
    /**
     * <pre>
     *短信版本
     * </pre>
     *
     * <code>optional string smsVersion = 24;</code>
     */
    com.google.protobuf.ByteString
        getSmsVersionBytes();

    /**
     * <pre>
     *2.4G衰减值
     * </pre>
     *
     * <code>optional int32 damp24G = 25;</code>
     */
    int getDamp24G();

    /**
     * <pre>
     *2.4G通信频道
     * </pre>
     *
     * <code>optional int32 channel24G = 26;</code>
     */
    int getChannel24G();

    /**
     * <pre>
     *过滤时间
     * </pre>
     *
     * <code>optional int32 filterSeconds = 27;</code>
     */
    int getFilterSeconds();

    /**
     * <pre>
     *433M衰减值
     * </pre>
     *
     * <code>optional int32 damp433M = 28;</code>
     */
    int getDamp433M();

    /**
     * <pre>
     *433M通信频道
     * </pre>
     *
     * <code>optional int32 channel433M = 29;</code>
     */
    int getChannel433M();

    /**
     * <pre>
     *创建时间
     * </pre>
     *
     * <code>optional int64 createDt = 30;</code>
     */
    long getCreateDt();

    /**
     * <pre>
     *最后更新时间
     * </pre>
     *
     * <code>optional int64 lastUpdateDt = 31;</code>
     */
    long getLastUpdateDt();

    /**
     * <pre>
     *终端芯片是否在线
     * </pre>
     *
     * <code>optional bool isOnline = 32;</code>
     */
    boolean getIsOnline();

    /**
     * <pre>
     *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
     * </pre>
     *
     * <code>optional string status = 33;</code>
     */
    String getStatus();
    /**
     * <pre>
     *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
     * </pre>
     *
     * <code>optional string status = 33;</code>
     */
    com.google.protobuf.ByteString
        getStatusBytes();

    /**
     * <pre>
     *过期时间
     * </pre>
     *
     * <code>optional int64 expireDt = 34;</code>
     */
    long getExpireDt();

    /**
     * <pre>
     *余额
     * </pre>
     *
     * <code>optional double balance = 35;</code>
     */
    double getBalance();

    /**
     * <pre>
     *运营商
     * </pre>
     *
     * <code>optional string operator = 36;</code>
     */
    String getOperator();
    /**
     * <pre>
     *运营商
     * </pre>
     *
     * <code>optional string operator = 36;</code>
     */
    com.google.protobuf.ByteString
        getOperatorBytes();

    /**
     * <pre>
     *SIM卡过期时间
     * </pre>
     *
     * <code>optional int64 simExpireDt = 37;</code>
     */
    long getSimExpireDt();

    /**
     * <pre>
     *备注
     * </pre>
     *
     * <code>optional string remark = 38;</code>
     */
    String getRemark();
    /**
     * <pre>
     *备注
     * </pre>
     *
     * <code>optional string remark = 38;</code>
     */
    com.google.protobuf.ByteString
        getRemarkBytes();

    /**
     * <pre>
     *视频id
     * </pre>
     *
     * <code>optional string videoId = 39;</code>
     */
    String getVideoId();
    /**
     * <pre>
     *视频id
     * </pre>
     *
     * <code>optional string videoId = 39;</code>
     */
    com.google.protobuf.ByteString
        getVideoIdBytes();

    /**
     * <pre>
     *创建者
     * </pre>
     *
     * <code>optional string createBy = 40;</code>
     */
    String getCreateBy();
    /**
     * <pre>
     *创建者
     * </pre>
     *
     * <code>optional string createBy = 40;</code>
     */
    com.google.protobuf.ByteString
        getCreateByBytes();
  }
  /**
   * Protobuf type {@code DeviceMessage}
   */
  public  static final class DeviceMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DeviceMessage)
      DeviceMessageOrBuilder {
    // Use DeviceMessage.newBuilder() to construct.
    private DeviceMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceMessage() {
      id_ = 0L;
      deviceId_ = "";
      deviceIdDecimal_ = "";
      companyId_ = 0L;
      officeId_ = 0L;
      areaId_ = 0L;
      deviceType_ = "";
      deviceName_ = "";
      latitude_ = 0D;
      longitude_ = 0D;
      deviceAddress_ = "";
      battery_ = 0F;
      isLowBattery_ = false;
      temperature_ = 0F;
      isHighTemperature_ = false;
      batteryStatus_ = 0;
      isConnectBattery_ = 0;
      deviceImei_ = "";
      deviceImsi_ = "";
      deviceMsisdn_ = "";
      softwareVersion_ = "";
      hardwareVersion_ = "";
      protocolVersion_ = "";
      smsVersion_ = "";
      damp24G_ = 0;
      channel24G_ = 0;
      filterSeconds_ = 0;
      damp433M_ = 0;
      channel433M_ = 0;
      createDt_ = 0L;
      lastUpdateDt_ = 0L;
      isOnline_ = false;
      status_ = "";
      expireDt_ = 0L;
      balance_ = 0D;
      operator_ = "";
      simExpireDt_ = 0L;
      remark_ = "";
      videoId_ = "";
      createBy_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DeviceMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              deviceIdDecimal_ = s;
              break;
            }
            case 32: {

              companyId_ = input.readInt64();
              break;
            }
            case 40: {

              officeId_ = input.readInt64();
              break;
            }
            case 48: {

              areaId_ = input.readInt64();
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              deviceType_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              deviceName_ = s;
              break;
            }
            case 73: {

              latitude_ = input.readDouble();
              break;
            }
            case 81: {

              longitude_ = input.readDouble();
              break;
            }
            case 90: {
              String s = input.readStringRequireUtf8();

              deviceAddress_ = s;
              break;
            }
            case 101: {

              battery_ = input.readFloat();
              break;
            }
            case 104: {

              isLowBattery_ = input.readBool();
              break;
            }
            case 117: {

              temperature_ = input.readFloat();
              break;
            }
            case 120: {

              isHighTemperature_ = input.readBool();
              break;
            }
            case 128: {

              batteryStatus_ = input.readInt32();
              break;
            }
            case 136: {

              isConnectBattery_ = input.readInt32();
              break;
            }
            case 146: {
              String s = input.readStringRequireUtf8();

              deviceImei_ = s;
              break;
            }
            case 154: {
              String s = input.readStringRequireUtf8();

              deviceImsi_ = s;
              break;
            }
            case 162: {
              String s = input.readStringRequireUtf8();

              deviceMsisdn_ = s;
              break;
            }
            case 170: {
              String s = input.readStringRequireUtf8();

              softwareVersion_ = s;
              break;
            }
            case 178: {
              String s = input.readStringRequireUtf8();

              hardwareVersion_ = s;
              break;
            }
            case 186: {
              String s = input.readStringRequireUtf8();

              protocolVersion_ = s;
              break;
            }
            case 194: {
              String s = input.readStringRequireUtf8();

              smsVersion_ = s;
              break;
            }
            case 200: {

              damp24G_ = input.readInt32();
              break;
            }
            case 208: {

              channel24G_ = input.readInt32();
              break;
            }
            case 216: {

              filterSeconds_ = input.readInt32();
              break;
            }
            case 224: {

              damp433M_ = input.readInt32();
              break;
            }
            case 232: {

              channel433M_ = input.readInt32();
              break;
            }
            case 240: {

              createDt_ = input.readInt64();
              break;
            }
            case 248: {

              lastUpdateDt_ = input.readInt64();
              break;
            }
            case 256: {

              isOnline_ = input.readBool();
              break;
            }
            case 266: {
              String s = input.readStringRequireUtf8();

              status_ = s;
              break;
            }
            case 272: {

              expireDt_ = input.readInt64();
              break;
            }
            case 281: {

              balance_ = input.readDouble();
              break;
            }
            case 290: {
              String s = input.readStringRequireUtf8();

              operator_ = s;
              break;
            }
            case 296: {

              simExpireDt_ = input.readInt64();
              break;
            }
            case 306: {
              String s = input.readStringRequireUtf8();

              remark_ = s;
              break;
            }
            case 314: {
              String s = input.readStringRequireUtf8();

              videoId_ = s;
              break;
            }
            case 322: {
              String s = input.readStringRequireUtf8();

              createBy_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Device.internal_static_DeviceMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Device.internal_static_DeviceMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DeviceMessage.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *主键ID
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int DEVICEID_FIELD_NUMBER = 2;
    private volatile Object deviceId_;
    /**
     * <pre>
     *读头ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    public String getDeviceId() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *读头ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICEIDDECIMAL_FIELD_NUMBER = 3;
    private volatile Object deviceIdDecimal_;
    /**
     * <pre>
     *读头ID 10进制
     * </pre>
     *
     * <code>optional string deviceIdDecimal = 3;</code>
     */
    public String getDeviceIdDecimal() {
      Object ref = deviceIdDecimal_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceIdDecimal_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *读头ID 10进制
     * </pre>
     *
     * <code>optional string deviceIdDecimal = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdDecimalBytes() {
      Object ref = deviceIdDecimal_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceIdDecimal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPANYID_FIELD_NUMBER = 4;
    private long companyId_;
    /**
     * <pre>
     * 公司ID
     * </pre>
     *
     * <code>optional int64 companyId = 4;</code>
     */
    public long getCompanyId() {
      return companyId_;
    }

    public static final int OFFICEID_FIELD_NUMBER = 5;
    private long officeId_;
    /**
     * <pre>
     *部门ID
     * </pre>
     *
     * <code>optional int64 officeId = 5;</code>
     */
    public long getOfficeId() {
      return officeId_;
    }

    public static final int AREAID_FIELD_NUMBER = 6;
    private long areaId_;
    /**
     * <pre>
     *区域ID
     * </pre>
     *
     * <code>optional int64 areaId = 6;</code>
     */
    public long getAreaId() {
      return areaId_;
    }

    public static final int DEVICETYPE_FIELD_NUMBER = 7;
    private volatile Object deviceType_;
    /**
     * <pre>
     *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
     * </pre>
     *
     * <code>optional string deviceType = 7;</code>
     */
    public String getDeviceType() {
      Object ref = deviceType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
     * </pre>
     *
     * <code>optional string deviceType = 7;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceTypeBytes() {
      Object ref = deviceType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICENAME_FIELD_NUMBER = 8;
    private volatile Object deviceName_;
    /**
     * <pre>
     *读头名称
     * </pre>
     *
     * <code>optional string deviceName = 8;</code>
     */
    public String getDeviceName() {
      Object ref = deviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *读头名称
     * </pre>
     *
     * <code>optional string deviceName = 8;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceNameBytes() {
      Object ref = deviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LATITUDE_FIELD_NUMBER = 9;
    private double latitude_;
    /**
     * <pre>
     *读头所在位置经度
     * </pre>
     *
     * <code>optional double latitude = 9;</code>
     */
    public double getLatitude() {
      return latitude_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 10;
    private double longitude_;
    /**
     * <pre>
     *读头所在位置纬度
     * </pre>
     *
     * <code>optional double longitude = 10;</code>
     */
    public double getLongitude() {
      return longitude_;
    }

    public static final int DEVICEADDRESS_FIELD_NUMBER = 11;
    private volatile Object deviceAddress_;
    /**
     * <pre>
     *读头所在位置的详细描述
     * </pre>
     *
     * <code>optional string deviceAddress = 11;</code>
     */
    public String getDeviceAddress() {
      Object ref = deviceAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *读头所在位置的详细描述
     * </pre>
     *
     * <code>optional string deviceAddress = 11;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceAddressBytes() {
      Object ref = deviceAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BATTERY_FIELD_NUMBER = 12;
    private float battery_;
    /**
     * <pre>
     *电池电量
     * </pre>
     *
     * <code>optional float battery = 12;</code>
     */
    public float getBattery() {
      return battery_;
    }

    public static final int ISLOWBATTERY_FIELD_NUMBER = 13;
    private boolean isLowBattery_;
    /**
     * <pre>
     *是否低电
     * </pre>
     *
     * <code>optional bool isLowBattery = 13;</code>
     */
    public boolean getIsLowBattery() {
      return isLowBattery_;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 14;
    private float temperature_;
    /**
     * <pre>
     *温度
     * </pre>
     *
     * <code>optional float temperature = 14;</code>
     */
    public float getTemperature() {
      return temperature_;
    }

    public static final int ISHIGHTEMPERATURE_FIELD_NUMBER = 15;
    private boolean isHighTemperature_;
    /**
     * <pre>
     *是否高温
     * </pre>
     *
     * <code>optional bool isHighTemperature = 15;</code>
     */
    public boolean getIsHighTemperature() {
      return isHighTemperature_;
    }

    public static final int BATTERYSTATUS_FIELD_NUMBER = 16;
    private int batteryStatus_;
    /**
     * <pre>
     *外电状态 - 0:外电, 1:电池
     * </pre>
     *
     * <code>optional int32 batteryStatus = 16;</code>
     */
    public int getBatteryStatus() {
      return batteryStatus_;
    }

    public static final int ISCONNECTBATTERY_FIELD_NUMBER = 17;
    private int isConnectBattery_;
    /**
     * <pre>
     *电池连接状态,0-未连接,1-已连接
     * </pre>
     *
     * <code>optional int32 isConnectBattery = 17;</code>
     */
    public int getIsConnectBattery() {
      return isConnectBattery_;
    }

    public static final int DEVICEIMEI_FIELD_NUMBER = 18;
    private volatile Object deviceImei_;
    /**
     * <pre>
     *IMEI号
     * </pre>
     *
     * <code>optional string deviceImei = 18;</code>
     */
    public String getDeviceImei() {
      Object ref = deviceImei_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceImei_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *IMEI号
     * </pre>
     *
     * <code>optional string deviceImei = 18;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceImeiBytes() {
      Object ref = deviceImei_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceImei_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICEIMSI_FIELD_NUMBER = 19;
    private volatile Object deviceImsi_;
    /**
     * <pre>
     *IMSI号
     * </pre>
     *
     * <code>optional string deviceImsi = 19;</code>
     */
    public String getDeviceImsi() {
      Object ref = deviceImsi_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceImsi_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *IMSI号
     * </pre>
     *
     * <code>optional string deviceImsi = 19;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceImsiBytes() {
      Object ref = deviceImsi_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceImsi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICEMSISDN_FIELD_NUMBER = 20;
    private volatile Object deviceMsisdn_;
    /**
     * <pre>
     *读头中的手机号
     * </pre>
     *
     * <code>optional string deviceMsisdn = 20;</code>
     */
    public String getDeviceMsisdn() {
      Object ref = deviceMsisdn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceMsisdn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *读头中的手机号
     * </pre>
     *
     * <code>optional string deviceMsisdn = 20;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceMsisdnBytes() {
      Object ref = deviceMsisdn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceMsisdn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOFTWAREVERSION_FIELD_NUMBER = 21;
    private volatile Object softwareVersion_;
    /**
     * <pre>
     *软件版本
     * </pre>
     *
     * <code>optional string softwareVersion = 21;</code>
     */
    public String getSoftwareVersion() {
      Object ref = softwareVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        softwareVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *软件版本
     * </pre>
     *
     * <code>optional string softwareVersion = 21;</code>
     */
    public com.google.protobuf.ByteString
        getSoftwareVersionBytes() {
      Object ref = softwareVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        softwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HARDWAREVERSION_FIELD_NUMBER = 22;
    private volatile Object hardwareVersion_;
    /**
     * <pre>
     *硬件版本
     * </pre>
     *
     * <code>optional string hardwareVersion = 22;</code>
     */
    public String getHardwareVersion() {
      Object ref = hardwareVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        hardwareVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *硬件版本
     * </pre>
     *
     * <code>optional string hardwareVersion = 22;</code>
     */
    public com.google.protobuf.ByteString
        getHardwareVersionBytes() {
      Object ref = hardwareVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        hardwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROTOCOLVERSION_FIELD_NUMBER = 23;
    private volatile Object protocolVersion_;
    /**
     * <pre>
     *协议版本
     * </pre>
     *
     * <code>optional string protocolVersion = 23;</code>
     */
    public String getProtocolVersion() {
      Object ref = protocolVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        protocolVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *协议版本
     * </pre>
     *
     * <code>optional string protocolVersion = 23;</code>
     */
    public com.google.protobuf.ByteString
        getProtocolVersionBytes() {
      Object ref = protocolVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        protocolVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SMSVERSION_FIELD_NUMBER = 24;
    private volatile Object smsVersion_;
    /**
     * <pre>
     *短信版本
     * </pre>
     *
     * <code>optional string smsVersion = 24;</code>
     */
    public String getSmsVersion() {
      Object ref = smsVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        smsVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *短信版本
     * </pre>
     *
     * <code>optional string smsVersion = 24;</code>
     */
    public com.google.protobuf.ByteString
        getSmsVersionBytes() {
      Object ref = smsVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        smsVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DAMP24G_FIELD_NUMBER = 25;
    private int damp24G_;
    /**
     * <pre>
     *2.4G衰减值
     * </pre>
     *
     * <code>optional int32 damp24G = 25;</code>
     */
    public int getDamp24G() {
      return damp24G_;
    }

    public static final int CHANNEL24G_FIELD_NUMBER = 26;
    private int channel24G_;
    /**
     * <pre>
     *2.4G通信频道
     * </pre>
     *
     * <code>optional int32 channel24G = 26;</code>
     */
    public int getChannel24G() {
      return channel24G_;
    }

    public static final int FILTERSECONDS_FIELD_NUMBER = 27;
    private int filterSeconds_;
    /**
     * <pre>
     *过滤时间
     * </pre>
     *
     * <code>optional int32 filterSeconds = 27;</code>
     */
    public int getFilterSeconds() {
      return filterSeconds_;
    }

    public static final int DAMP433M_FIELD_NUMBER = 28;
    private int damp433M_;
    /**
     * <pre>
     *433M衰减值
     * </pre>
     *
     * <code>optional int32 damp433M = 28;</code>
     */
    public int getDamp433M() {
      return damp433M_;
    }

    public static final int CHANNEL433M_FIELD_NUMBER = 29;
    private int channel433M_;
    /**
     * <pre>
     *433M通信频道
     * </pre>
     *
     * <code>optional int32 channel433M = 29;</code>
     */
    public int getChannel433M() {
      return channel433M_;
    }

    public static final int CREATEDT_FIELD_NUMBER = 30;
    private long createDt_;
    /**
     * <pre>
     *创建时间
     * </pre>
     *
     * <code>optional int64 createDt = 30;</code>
     */
    public long getCreateDt() {
      return createDt_;
    }

    public static final int LASTUPDATEDT_FIELD_NUMBER = 31;
    private long lastUpdateDt_;
    /**
     * <pre>
     *最后更新时间
     * </pre>
     *
     * <code>optional int64 lastUpdateDt = 31;</code>
     */
    public long getLastUpdateDt() {
      return lastUpdateDt_;
    }

    public static final int ISONLINE_FIELD_NUMBER = 32;
    private boolean isOnline_;
    /**
     * <pre>
     *终端芯片是否在线
     * </pre>
     *
     * <code>optional bool isOnline = 32;</code>
     */
    public boolean getIsOnline() {
      return isOnline_;
    }

    public static final int STATUS_FIELD_NUMBER = 33;
    private volatile Object status_;
    /**
     * <pre>
     *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
     * </pre>
     *
     * <code>optional string status = 33;</code>
     */
    public String getStatus() {
      Object ref = status_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        status_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
     * </pre>
     *
     * <code>optional string status = 33;</code>
     */
    public com.google.protobuf.ByteString
        getStatusBytes() {
      Object ref = status_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        status_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIREDT_FIELD_NUMBER = 34;
    private long expireDt_;
    /**
     * <pre>
     *过期时间
     * </pre>
     *
     * <code>optional int64 expireDt = 34;</code>
     */
    public long getExpireDt() {
      return expireDt_;
    }

    public static final int BALANCE_FIELD_NUMBER = 35;
    private double balance_;
    /**
     * <pre>
     *余额
     * </pre>
     *
     * <code>optional double balance = 35;</code>
     */
    public double getBalance() {
      return balance_;
    }

    public static final int OPERATOR_FIELD_NUMBER = 36;
    private volatile Object operator_;
    /**
     * <pre>
     *运营商
     * </pre>
     *
     * <code>optional string operator = 36;</code>
     */
    public String getOperator() {
      Object ref = operator_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        operator_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *运营商
     * </pre>
     *
     * <code>optional string operator = 36;</code>
     */
    public com.google.protobuf.ByteString
        getOperatorBytes() {
      Object ref = operator_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        operator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIMEXPIREDT_FIELD_NUMBER = 37;
    private long simExpireDt_;
    /**
     * <pre>
     *SIM卡过期时间
     * </pre>
     *
     * <code>optional int64 simExpireDt = 37;</code>
     */
    public long getSimExpireDt() {
      return simExpireDt_;
    }

    public static final int REMARK_FIELD_NUMBER = 38;
    private volatile Object remark_;
    /**
     * <pre>
     *备注
     * </pre>
     *
     * <code>optional string remark = 38;</code>
     */
    public String getRemark() {
      Object ref = remark_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        remark_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *备注
     * </pre>
     *
     * <code>optional string remark = 38;</code>
     */
    public com.google.protobuf.ByteString
        getRemarkBytes() {
      Object ref = remark_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        remark_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VIDEOID_FIELD_NUMBER = 39;
    private volatile Object videoId_;
    /**
     * <pre>
     *视频id
     * </pre>
     *
     * <code>optional string videoId = 39;</code>
     */
    public String getVideoId() {
      Object ref = videoId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        videoId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *视频id
     * </pre>
     *
     * <code>optional string videoId = 39;</code>
     */
    public com.google.protobuf.ByteString
        getVideoIdBytes() {
      Object ref = videoId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        videoId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATEBY_FIELD_NUMBER = 40;
    private volatile Object createBy_;
    /**
     * <pre>
     *创建者
     * </pre>
     *
     * <code>optional string createBy = 40;</code>
     */
    public String getCreateBy() {
      Object ref = createBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        createBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *创建者
     * </pre>
     *
     * <code>optional string createBy = 40;</code>
     */
    public com.google.protobuf.ByteString
        getCreateByBytes() {
      Object ref = createBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        createBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceId_);
      }
      if (!getDeviceIdDecimalBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, deviceIdDecimal_);
      }
      if (companyId_ != 0L) {
        output.writeInt64(4, companyId_);
      }
      if (officeId_ != 0L) {
        output.writeInt64(5, officeId_);
      }
      if (areaId_ != 0L) {
        output.writeInt64(6, areaId_);
      }
      if (!getDeviceTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, deviceType_);
      }
      if (!getDeviceNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, deviceName_);
      }
      if (latitude_ != 0D) {
        output.writeDouble(9, latitude_);
      }
      if (longitude_ != 0D) {
        output.writeDouble(10, longitude_);
      }
      if (!getDeviceAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, deviceAddress_);
      }
      if (battery_ != 0F) {
        output.writeFloat(12, battery_);
      }
      if (isLowBattery_ != false) {
        output.writeBool(13, isLowBattery_);
      }
      if (temperature_ != 0F) {
        output.writeFloat(14, temperature_);
      }
      if (isHighTemperature_ != false) {
        output.writeBool(15, isHighTemperature_);
      }
      if (batteryStatus_ != 0) {
        output.writeInt32(16, batteryStatus_);
      }
      if (isConnectBattery_ != 0) {
        output.writeInt32(17, isConnectBattery_);
      }
      if (!getDeviceImeiBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, deviceImei_);
      }
      if (!getDeviceImsiBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 19, deviceImsi_);
      }
      if (!getDeviceMsisdnBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, deviceMsisdn_);
      }
      if (!getSoftwareVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, softwareVersion_);
      }
      if (!getHardwareVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, hardwareVersion_);
      }
      if (!getProtocolVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 23, protocolVersion_);
      }
      if (!getSmsVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 24, smsVersion_);
      }
      if (damp24G_ != 0) {
        output.writeInt32(25, damp24G_);
      }
      if (channel24G_ != 0) {
        output.writeInt32(26, channel24G_);
      }
      if (filterSeconds_ != 0) {
        output.writeInt32(27, filterSeconds_);
      }
      if (damp433M_ != 0) {
        output.writeInt32(28, damp433M_);
      }
      if (channel433M_ != 0) {
        output.writeInt32(29, channel433M_);
      }
      if (createDt_ != 0L) {
        output.writeInt64(30, createDt_);
      }
      if (lastUpdateDt_ != 0L) {
        output.writeInt64(31, lastUpdateDt_);
      }
      if (isOnline_ != false) {
        output.writeBool(32, isOnline_);
      }
      if (!getStatusBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 33, status_);
      }
      if (expireDt_ != 0L) {
        output.writeInt64(34, expireDt_);
      }
      if (balance_ != 0D) {
        output.writeDouble(35, balance_);
      }
      if (!getOperatorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 36, operator_);
      }
      if (simExpireDt_ != 0L) {
        output.writeInt64(37, simExpireDt_);
      }
      if (!getRemarkBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 38, remark_);
      }
      if (!getVideoIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 39, videoId_);
      }
      if (!getCreateByBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 40, createBy_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceId_);
      }
      if (!getDeviceIdDecimalBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, deviceIdDecimal_);
      }
      if (companyId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, companyId_);
      }
      if (officeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, officeId_);
      }
      if (areaId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, areaId_);
      }
      if (!getDeviceTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, deviceType_);
      }
      if (!getDeviceNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, deviceName_);
      }
      if (latitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, latitude_);
      }
      if (longitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, longitude_);
      }
      if (!getDeviceAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, deviceAddress_);
      }
      if (battery_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, battery_);
      }
      if (isLowBattery_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, isLowBattery_);
      }
      if (temperature_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, temperature_);
      }
      if (isHighTemperature_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, isHighTemperature_);
      }
      if (batteryStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, batteryStatus_);
      }
      if (isConnectBattery_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, isConnectBattery_);
      }
      if (!getDeviceImeiBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, deviceImei_);
      }
      if (!getDeviceImsiBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, deviceImsi_);
      }
      if (!getDeviceMsisdnBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, deviceMsisdn_);
      }
      if (!getSoftwareVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, softwareVersion_);
      }
      if (!getHardwareVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, hardwareVersion_);
      }
      if (!getProtocolVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, protocolVersion_);
      }
      if (!getSmsVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, smsVersion_);
      }
      if (damp24G_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, damp24G_);
      }
      if (channel24G_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, channel24G_);
      }
      if (filterSeconds_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, filterSeconds_);
      }
      if (damp433M_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, damp433M_);
      }
      if (channel433M_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, channel433M_);
      }
      if (createDt_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(30, createDt_);
      }
      if (lastUpdateDt_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(31, lastUpdateDt_);
      }
      if (isOnline_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(32, isOnline_);
      }
      if (!getStatusBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(33, status_);
      }
      if (expireDt_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(34, expireDt_);
      }
      if (balance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(35, balance_);
      }
      if (!getOperatorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(36, operator_);
      }
      if (simExpireDt_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(37, simExpireDt_);
      }
      if (!getRemarkBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(38, remark_);
      }
      if (!getVideoIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(39, videoId_);
      }
      if (!getCreateByBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(40, createBy_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof DeviceMessage)) {
        return super.equals(obj);
      }
      DeviceMessage other = (DeviceMessage) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getDeviceId()
          .equals(other.getDeviceId());
      result = result && getDeviceIdDecimal()
          .equals(other.getDeviceIdDecimal());
      result = result && (getCompanyId()
          == other.getCompanyId());
      result = result && (getOfficeId()
          == other.getOfficeId());
      result = result && (getAreaId()
          == other.getAreaId());
      result = result && getDeviceType()
          .equals(other.getDeviceType());
      result = result && getDeviceName()
          .equals(other.getDeviceName());
      result = result && (
          Double.doubleToLongBits(getLatitude())
          == Double.doubleToLongBits(
              other.getLatitude()));
      result = result && (
          Double.doubleToLongBits(getLongitude())
          == Double.doubleToLongBits(
              other.getLongitude()));
      result = result && getDeviceAddress()
          .equals(other.getDeviceAddress());
      result = result && (
          Float.floatToIntBits(getBattery())
          == Float.floatToIntBits(
              other.getBattery()));
      result = result && (getIsLowBattery()
          == other.getIsLowBattery());
      result = result && (
          Float.floatToIntBits(getTemperature())
          == Float.floatToIntBits(
              other.getTemperature()));
      result = result && (getIsHighTemperature()
          == other.getIsHighTemperature());
      result = result && (getBatteryStatus()
          == other.getBatteryStatus());
      result = result && (getIsConnectBattery()
          == other.getIsConnectBattery());
      result = result && getDeviceImei()
          .equals(other.getDeviceImei());
      result = result && getDeviceImsi()
          .equals(other.getDeviceImsi());
      result = result && getDeviceMsisdn()
          .equals(other.getDeviceMsisdn());
      result = result && getSoftwareVersion()
          .equals(other.getSoftwareVersion());
      result = result && getHardwareVersion()
          .equals(other.getHardwareVersion());
      result = result && getProtocolVersion()
          .equals(other.getProtocolVersion());
      result = result && getSmsVersion()
          .equals(other.getSmsVersion());
      result = result && (getDamp24G()
          == other.getDamp24G());
      result = result && (getChannel24G()
          == other.getChannel24G());
      result = result && (getFilterSeconds()
          == other.getFilterSeconds());
      result = result && (getDamp433M()
          == other.getDamp433M());
      result = result && (getChannel433M()
          == other.getChannel433M());
      result = result && (getCreateDt()
          == other.getCreateDt());
      result = result && (getLastUpdateDt()
          == other.getLastUpdateDt());
      result = result && (getIsOnline()
          == other.getIsOnline());
      result = result && getStatus()
          .equals(other.getStatus());
      result = result && (getExpireDt()
          == other.getExpireDt());
      result = result && (
          Double.doubleToLongBits(getBalance())
          == Double.doubleToLongBits(
              other.getBalance()));
      result = result && getOperator()
          .equals(other.getOperator());
      result = result && (getSimExpireDt()
          == other.getSimExpireDt());
      result = result && getRemark()
          .equals(other.getRemark());
      result = result && getVideoId()
          .equals(other.getVideoId());
      result = result && getCreateBy()
          .equals(other.getCreateBy());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + DEVICEIDDECIMAL_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceIdDecimal().hashCode();
      hash = (37 * hash) + COMPANYID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCompanyId());
      hash = (37 * hash) + OFFICEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOfficeId());
      hash = (37 * hash) + AREAID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAreaId());
      hash = (37 * hash) + DEVICETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceType().hashCode();
      hash = (37 * hash) + DEVICENAME_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceName().hashCode();
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLatitude()));
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLongitude()));
      hash = (37 * hash) + DEVICEADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceAddress().hashCode();
      hash = (37 * hash) + BATTERY_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getBattery());
      hash = (37 * hash) + ISLOWBATTERY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsLowBattery());
      hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getTemperature());
      hash = (37 * hash) + ISHIGHTEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsHighTemperature());
      hash = (37 * hash) + BATTERYSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getBatteryStatus();
      hash = (37 * hash) + ISCONNECTBATTERY_FIELD_NUMBER;
      hash = (53 * hash) + getIsConnectBattery();
      hash = (37 * hash) + DEVICEIMEI_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceImei().hashCode();
      hash = (37 * hash) + DEVICEIMSI_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceImsi().hashCode();
      hash = (37 * hash) + DEVICEMSISDN_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceMsisdn().hashCode();
      hash = (37 * hash) + SOFTWAREVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getSoftwareVersion().hashCode();
      hash = (37 * hash) + HARDWAREVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getHardwareVersion().hashCode();
      hash = (37 * hash) + PROTOCOLVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getProtocolVersion().hashCode();
      hash = (37 * hash) + SMSVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getSmsVersion().hashCode();
      hash = (37 * hash) + DAMP24G_FIELD_NUMBER;
      hash = (53 * hash) + getDamp24G();
      hash = (37 * hash) + CHANNEL24G_FIELD_NUMBER;
      hash = (53 * hash) + getChannel24G();
      hash = (37 * hash) + FILTERSECONDS_FIELD_NUMBER;
      hash = (53 * hash) + getFilterSeconds();
      hash = (37 * hash) + DAMP433M_FIELD_NUMBER;
      hash = (53 * hash) + getDamp433M();
      hash = (37 * hash) + CHANNEL433M_FIELD_NUMBER;
      hash = (53 * hash) + getChannel433M();
      hash = (37 * hash) + CREATEDT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreateDt());
      hash = (37 * hash) + LASTUPDATEDT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastUpdateDt());
      hash = (37 * hash) + ISONLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsOnline());
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus().hashCode();
      hash = (37 * hash) + EXPIREDT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExpireDt());
      hash = (37 * hash) + BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getBalance()));
      hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
      hash = (53 * hash) + getOperator().hashCode();
      hash = (37 * hash) + SIMEXPIREDT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSimExpireDt());
      hash = (37 * hash) + REMARK_FIELD_NUMBER;
      hash = (53 * hash) + getRemark().hashCode();
      hash = (37 * hash) + VIDEOID_FIELD_NUMBER;
      hash = (53 * hash) + getVideoId().hashCode();
      hash = (37 * hash) + CREATEBY_FIELD_NUMBER;
      hash = (53 * hash) + getCreateBy().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DeviceMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DeviceMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DeviceMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DeviceMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DeviceMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static DeviceMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static DeviceMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static DeviceMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static DeviceMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static DeviceMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(DeviceMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeviceMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DeviceMessage)
        DeviceMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Device.internal_static_DeviceMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Device.internal_static_DeviceMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DeviceMessage.class, Builder.class);
      }

      // Construct using com.yzh.rfid.app.response.Device.DeviceMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        deviceId_ = "";

        deviceIdDecimal_ = "";

        companyId_ = 0L;

        officeId_ = 0L;

        areaId_ = 0L;

        deviceType_ = "";

        deviceName_ = "";

        latitude_ = 0D;

        longitude_ = 0D;

        deviceAddress_ = "";

        battery_ = 0F;

        isLowBattery_ = false;

        temperature_ = 0F;

        isHighTemperature_ = false;

        batteryStatus_ = 0;

        isConnectBattery_ = 0;

        deviceImei_ = "";

        deviceImsi_ = "";

        deviceMsisdn_ = "";

        softwareVersion_ = "";

        hardwareVersion_ = "";

        protocolVersion_ = "";

        smsVersion_ = "";

        damp24G_ = 0;

        channel24G_ = 0;

        filterSeconds_ = 0;

        damp433M_ = 0;

        channel433M_ = 0;

        createDt_ = 0L;

        lastUpdateDt_ = 0L;

        isOnline_ = false;

        status_ = "";

        expireDt_ = 0L;

        balance_ = 0D;

        operator_ = "";

        simExpireDt_ = 0L;

        remark_ = "";

        videoId_ = "";

        createBy_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Device.internal_static_DeviceMessage_descriptor;
      }

      public DeviceMessage getDefaultInstanceForType() {
        return DeviceMessage.getDefaultInstance();
      }

      public DeviceMessage build() {
        DeviceMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DeviceMessage buildPartial() {
        DeviceMessage result = new DeviceMessage(this);
        result.id_ = id_;
        result.deviceId_ = deviceId_;
        result.deviceIdDecimal_ = deviceIdDecimal_;
        result.companyId_ = companyId_;
        result.officeId_ = officeId_;
        result.areaId_ = areaId_;
        result.deviceType_ = deviceType_;
        result.deviceName_ = deviceName_;
        result.latitude_ = latitude_;
        result.longitude_ = longitude_;
        result.deviceAddress_ = deviceAddress_;
        result.battery_ = battery_;
        result.isLowBattery_ = isLowBattery_;
        result.temperature_ = temperature_;
        result.isHighTemperature_ = isHighTemperature_;
        result.batteryStatus_ = batteryStatus_;
        result.isConnectBattery_ = isConnectBattery_;
        result.deviceImei_ = deviceImei_;
        result.deviceImsi_ = deviceImsi_;
        result.deviceMsisdn_ = deviceMsisdn_;
        result.softwareVersion_ = softwareVersion_;
        result.hardwareVersion_ = hardwareVersion_;
        result.protocolVersion_ = protocolVersion_;
        result.smsVersion_ = smsVersion_;
        result.damp24G_ = damp24G_;
        result.channel24G_ = channel24G_;
        result.filterSeconds_ = filterSeconds_;
        result.damp433M_ = damp433M_;
        result.channel433M_ = channel433M_;
        result.createDt_ = createDt_;
        result.lastUpdateDt_ = lastUpdateDt_;
        result.isOnline_ = isOnline_;
        result.status_ = status_;
        result.expireDt_ = expireDt_;
        result.balance_ = balance_;
        result.operator_ = operator_;
        result.simExpireDt_ = simExpireDt_;
        result.remark_ = remark_;
        result.videoId_ = videoId_;
        result.createBy_ = createBy_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeviceMessage) {
          return mergeFrom((DeviceMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DeviceMessage other) {
        if (other == DeviceMessage.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (!other.getDeviceIdDecimal().isEmpty()) {
          deviceIdDecimal_ = other.deviceIdDecimal_;
          onChanged();
        }
        if (other.getCompanyId() != 0L) {
          setCompanyId(other.getCompanyId());
        }
        if (other.getOfficeId() != 0L) {
          setOfficeId(other.getOfficeId());
        }
        if (other.getAreaId() != 0L) {
          setAreaId(other.getAreaId());
        }
        if (!other.getDeviceType().isEmpty()) {
          deviceType_ = other.deviceType_;
          onChanged();
        }
        if (!other.getDeviceName().isEmpty()) {
          deviceName_ = other.deviceName_;
          onChanged();
        }
        if (other.getLatitude() != 0D) {
          setLatitude(other.getLatitude());
        }
        if (other.getLongitude() != 0D) {
          setLongitude(other.getLongitude());
        }
        if (!other.getDeviceAddress().isEmpty()) {
          deviceAddress_ = other.deviceAddress_;
          onChanged();
        }
        if (other.getBattery() != 0F) {
          setBattery(other.getBattery());
        }
        if (other.getIsLowBattery() != false) {
          setIsLowBattery(other.getIsLowBattery());
        }
        if (other.getTemperature() != 0F) {
          setTemperature(other.getTemperature());
        }
        if (other.getIsHighTemperature() != false) {
          setIsHighTemperature(other.getIsHighTemperature());
        }
        if (other.getBatteryStatus() != 0) {
          setBatteryStatus(other.getBatteryStatus());
        }
        if (other.getIsConnectBattery() != 0) {
          setIsConnectBattery(other.getIsConnectBattery());
        }
        if (!other.getDeviceImei().isEmpty()) {
          deviceImei_ = other.deviceImei_;
          onChanged();
        }
        if (!other.getDeviceImsi().isEmpty()) {
          deviceImsi_ = other.deviceImsi_;
          onChanged();
        }
        if (!other.getDeviceMsisdn().isEmpty()) {
          deviceMsisdn_ = other.deviceMsisdn_;
          onChanged();
        }
        if (!other.getSoftwareVersion().isEmpty()) {
          softwareVersion_ = other.softwareVersion_;
          onChanged();
        }
        if (!other.getHardwareVersion().isEmpty()) {
          hardwareVersion_ = other.hardwareVersion_;
          onChanged();
        }
        if (!other.getProtocolVersion().isEmpty()) {
          protocolVersion_ = other.protocolVersion_;
          onChanged();
        }
        if (!other.getSmsVersion().isEmpty()) {
          smsVersion_ = other.smsVersion_;
          onChanged();
        }
        if (other.getDamp24G() != 0) {
          setDamp24G(other.getDamp24G());
        }
        if (other.getChannel24G() != 0) {
          setChannel24G(other.getChannel24G());
        }
        if (other.getFilterSeconds() != 0) {
          setFilterSeconds(other.getFilterSeconds());
        }
        if (other.getDamp433M() != 0) {
          setDamp433M(other.getDamp433M());
        }
        if (other.getChannel433M() != 0) {
          setChannel433M(other.getChannel433M());
        }
        if (other.getCreateDt() != 0L) {
          setCreateDt(other.getCreateDt());
        }
        if (other.getLastUpdateDt() != 0L) {
          setLastUpdateDt(other.getLastUpdateDt());
        }
        if (other.getIsOnline() != false) {
          setIsOnline(other.getIsOnline());
        }
        if (!other.getStatus().isEmpty()) {
          status_ = other.status_;
          onChanged();
        }
        if (other.getExpireDt() != 0L) {
          setExpireDt(other.getExpireDt());
        }
        if (other.getBalance() != 0D) {
          setBalance(other.getBalance());
        }
        if (!other.getOperator().isEmpty()) {
          operator_ = other.operator_;
          onChanged();
        }
        if (other.getSimExpireDt() != 0L) {
          setSimExpireDt(other.getSimExpireDt());
        }
        if (!other.getRemark().isEmpty()) {
          remark_ = other.remark_;
          onChanged();
        }
        if (!other.getVideoId().isEmpty()) {
          videoId_ = other.videoId_;
          onChanged();
        }
        if (!other.getCreateBy().isEmpty()) {
          createBy_ = other.createBy_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DeviceMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DeviceMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <pre>
       *主键ID
       * </pre>
       *
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *主键ID
       * </pre>
       *
       * <code>optional int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *主键ID
       * </pre>
       *
       * <code>optional int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private Object deviceId_ = "";
      /**
       * <pre>
       *读头ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public String getDeviceId() {
        Object ref = deviceId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *读头ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *读头ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder setDeviceId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private Object deviceIdDecimal_ = "";
      /**
       * <pre>
       *读头ID 10进制
       * </pre>
       *
       * <code>optional string deviceIdDecimal = 3;</code>
       */
      public String getDeviceIdDecimal() {
        Object ref = deviceIdDecimal_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceIdDecimal_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *读头ID 10进制
       * </pre>
       *
       * <code>optional string deviceIdDecimal = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdDecimalBytes() {
        Object ref = deviceIdDecimal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceIdDecimal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *读头ID 10进制
       * </pre>
       *
       * <code>optional string deviceIdDecimal = 3;</code>
       */
      public Builder setDeviceIdDecimal(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceIdDecimal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头ID 10进制
       * </pre>
       *
       * <code>optional string deviceIdDecimal = 3;</code>
       */
      public Builder clearDeviceIdDecimal() {
        
        deviceIdDecimal_ = getDefaultInstance().getDeviceIdDecimal();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头ID 10进制
       * </pre>
       *
       * <code>optional string deviceIdDecimal = 3;</code>
       */
      public Builder setDeviceIdDecimalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceIdDecimal_ = value;
        onChanged();
        return this;
      }

      private long companyId_ ;
      /**
       * <pre>
       * 公司ID
       * </pre>
       *
       * <code>optional int64 companyId = 4;</code>
       */
      public long getCompanyId() {
        return companyId_;
      }
      /**
       * <pre>
       * 公司ID
       * </pre>
       *
       * <code>optional int64 companyId = 4;</code>
       */
      public Builder setCompanyId(long value) {
        
        companyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 公司ID
       * </pre>
       *
       * <code>optional int64 companyId = 4;</code>
       */
      public Builder clearCompanyId() {
        
        companyId_ = 0L;
        onChanged();
        return this;
      }

      private long officeId_ ;
      /**
       * <pre>
       *部门ID
       * </pre>
       *
       * <code>optional int64 officeId = 5;</code>
       */
      public long getOfficeId() {
        return officeId_;
      }
      /**
       * <pre>
       *部门ID
       * </pre>
       *
       * <code>optional int64 officeId = 5;</code>
       */
      public Builder setOfficeId(long value) {
        
        officeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *部门ID
       * </pre>
       *
       * <code>optional int64 officeId = 5;</code>
       */
      public Builder clearOfficeId() {
        
        officeId_ = 0L;
        onChanged();
        return this;
      }

      private long areaId_ ;
      /**
       * <pre>
       *区域ID
       * </pre>
       *
       * <code>optional int64 areaId = 6;</code>
       */
      public long getAreaId() {
        return areaId_;
      }
      /**
       * <pre>
       *区域ID
       * </pre>
       *
       * <code>optional int64 areaId = 6;</code>
       */
      public Builder setAreaId(long value) {
        
        areaId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *区域ID
       * </pre>
       *
       * <code>optional int64 areaId = 6;</code>
       */
      public Builder clearAreaId() {
        
        areaId_ = 0L;
        onChanged();
        return this;
      }

      private Object deviceType_ = "";
      /**
       * <pre>
       *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
       * </pre>
       *
       * <code>optional string deviceType = 7;</code>
       */
      public String getDeviceType() {
        Object ref = deviceType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
       * </pre>
       *
       * <code>optional string deviceType = 7;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceTypeBytes() {
        Object ref = deviceType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
       * </pre>
       *
       * <code>optional string deviceType = 7;</code>
       */
      public Builder setDeviceType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
       * </pre>
       *
       * <code>optional string deviceType = 7;</code>
       */
      public Builder clearDeviceType() {
        
        deviceType_ = getDefaultInstance().getDeviceType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头的类别，GPRS 读头为 0x0001, WIFI 读头为 0x0002。可在数据字典里维护类型
       * </pre>
       *
       * <code>optional string deviceType = 7;</code>
       */
      public Builder setDeviceTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceType_ = value;
        onChanged();
        return this;
      }

      private Object deviceName_ = "";
      /**
       * <pre>
       *读头名称
       * </pre>
       *
       * <code>optional string deviceName = 8;</code>
       */
      public String getDeviceName() {
        Object ref = deviceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *读头名称
       * </pre>
       *
       * <code>optional string deviceName = 8;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceNameBytes() {
        Object ref = deviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *读头名称
       * </pre>
       *
       * <code>optional string deviceName = 8;</code>
       */
      public Builder setDeviceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头名称
       * </pre>
       *
       * <code>optional string deviceName = 8;</code>
       */
      public Builder clearDeviceName() {
        
        deviceName_ = getDefaultInstance().getDeviceName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头名称
       * </pre>
       *
       * <code>optional string deviceName = 8;</code>
       */
      public Builder setDeviceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceName_ = value;
        onChanged();
        return this;
      }

      private double latitude_ ;
      /**
       * <pre>
       *读头所在位置经度
       * </pre>
       *
       * <code>optional double latitude = 9;</code>
       */
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <pre>
       *读头所在位置经度
       * </pre>
       *
       * <code>optional double latitude = 9;</code>
       */
      public Builder setLatitude(double value) {
        
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头所在位置经度
       * </pre>
       *
       * <code>optional double latitude = 9;</code>
       */
      public Builder clearLatitude() {
        
        latitude_ = 0D;
        onChanged();
        return this;
      }

      private double longitude_ ;
      /**
       * <pre>
       *读头所在位置纬度
       * </pre>
       *
       * <code>optional double longitude = 10;</code>
       */
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <pre>
       *读头所在位置纬度
       * </pre>
       *
       * <code>optional double longitude = 10;</code>
       */
      public Builder setLongitude(double value) {
        
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头所在位置纬度
       * </pre>
       *
       * <code>optional double longitude = 10;</code>
       */
      public Builder clearLongitude() {
        
        longitude_ = 0D;
        onChanged();
        return this;
      }

      private Object deviceAddress_ = "";
      /**
       * <pre>
       *读头所在位置的详细描述
       * </pre>
       *
       * <code>optional string deviceAddress = 11;</code>
       */
      public String getDeviceAddress() {
        Object ref = deviceAddress_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *读头所在位置的详细描述
       * </pre>
       *
       * <code>optional string deviceAddress = 11;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceAddressBytes() {
        Object ref = deviceAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *读头所在位置的详细描述
       * </pre>
       *
       * <code>optional string deviceAddress = 11;</code>
       */
      public Builder setDeviceAddress(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头所在位置的详细描述
       * </pre>
       *
       * <code>optional string deviceAddress = 11;</code>
       */
      public Builder clearDeviceAddress() {
        
        deviceAddress_ = getDefaultInstance().getDeviceAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头所在位置的详细描述
       * </pre>
       *
       * <code>optional string deviceAddress = 11;</code>
       */
      public Builder setDeviceAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceAddress_ = value;
        onChanged();
        return this;
      }

      private float battery_ ;
      /**
       * <pre>
       *电池电量
       * </pre>
       *
       * <code>optional float battery = 12;</code>
       */
      public float getBattery() {
        return battery_;
      }
      /**
       * <pre>
       *电池电量
       * </pre>
       *
       * <code>optional float battery = 12;</code>
       */
      public Builder setBattery(float value) {
        
        battery_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池电量
       * </pre>
       *
       * <code>optional float battery = 12;</code>
       */
      public Builder clearBattery() {
        
        battery_ = 0F;
        onChanged();
        return this;
      }

      private boolean isLowBattery_ ;
      /**
       * <pre>
       *是否低电
       * </pre>
       *
       * <code>optional bool isLowBattery = 13;</code>
       */
      public boolean getIsLowBattery() {
        return isLowBattery_;
      }
      /**
       * <pre>
       *是否低电
       * </pre>
       *
       * <code>optional bool isLowBattery = 13;</code>
       */
      public Builder setIsLowBattery(boolean value) {
        
        isLowBattery_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否低电
       * </pre>
       *
       * <code>optional bool isLowBattery = 13;</code>
       */
      public Builder clearIsLowBattery() {
        
        isLowBattery_ = false;
        onChanged();
        return this;
      }

      private float temperature_ ;
      /**
       * <pre>
       *温度
       * </pre>
       *
       * <code>optional float temperature = 14;</code>
       */
      public float getTemperature() {
        return temperature_;
      }
      /**
       * <pre>
       *温度
       * </pre>
       *
       * <code>optional float temperature = 14;</code>
       */
      public Builder setTemperature(float value) {
        
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *温度
       * </pre>
       *
       * <code>optional float temperature = 14;</code>
       */
      public Builder clearTemperature() {
        
        temperature_ = 0F;
        onChanged();
        return this;
      }

      private boolean isHighTemperature_ ;
      /**
       * <pre>
       *是否高温
       * </pre>
       *
       * <code>optional bool isHighTemperature = 15;</code>
       */
      public boolean getIsHighTemperature() {
        return isHighTemperature_;
      }
      /**
       * <pre>
       *是否高温
       * </pre>
       *
       * <code>optional bool isHighTemperature = 15;</code>
       */
      public Builder setIsHighTemperature(boolean value) {
        
        isHighTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否高温
       * </pre>
       *
       * <code>optional bool isHighTemperature = 15;</code>
       */
      public Builder clearIsHighTemperature() {
        
        isHighTemperature_ = false;
        onChanged();
        return this;
      }

      private int batteryStatus_ ;
      /**
       * <pre>
       *外电状态 - 0:外电, 1:电池
       * </pre>
       *
       * <code>optional int32 batteryStatus = 16;</code>
       */
      public int getBatteryStatus() {
        return batteryStatus_;
      }
      /**
       * <pre>
       *外电状态 - 0:外电, 1:电池
       * </pre>
       *
       * <code>optional int32 batteryStatus = 16;</code>
       */
      public Builder setBatteryStatus(int value) {
        
        batteryStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *外电状态 - 0:外电, 1:电池
       * </pre>
       *
       * <code>optional int32 batteryStatus = 16;</code>
       */
      public Builder clearBatteryStatus() {
        
        batteryStatus_ = 0;
        onChanged();
        return this;
      }

      private int isConnectBattery_ ;
      /**
       * <pre>
       *电池连接状态,0-未连接,1-已连接
       * </pre>
       *
       * <code>optional int32 isConnectBattery = 17;</code>
       */
      public int getIsConnectBattery() {
        return isConnectBattery_;
      }
      /**
       * <pre>
       *电池连接状态,0-未连接,1-已连接
       * </pre>
       *
       * <code>optional int32 isConnectBattery = 17;</code>
       */
      public Builder setIsConnectBattery(int value) {
        
        isConnectBattery_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *电池连接状态,0-未连接,1-已连接
       * </pre>
       *
       * <code>optional int32 isConnectBattery = 17;</code>
       */
      public Builder clearIsConnectBattery() {
        
        isConnectBattery_ = 0;
        onChanged();
        return this;
      }

      private Object deviceImei_ = "";
      /**
       * <pre>
       *IMEI号
       * </pre>
       *
       * <code>optional string deviceImei = 18;</code>
       */
      public String getDeviceImei() {
        Object ref = deviceImei_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceImei_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *IMEI号
       * </pre>
       *
       * <code>optional string deviceImei = 18;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceImeiBytes() {
        Object ref = deviceImei_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceImei_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *IMEI号
       * </pre>
       *
       * <code>optional string deviceImei = 18;</code>
       */
      public Builder setDeviceImei(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceImei_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IMEI号
       * </pre>
       *
       * <code>optional string deviceImei = 18;</code>
       */
      public Builder clearDeviceImei() {
        
        deviceImei_ = getDefaultInstance().getDeviceImei();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IMEI号
       * </pre>
       *
       * <code>optional string deviceImei = 18;</code>
       */
      public Builder setDeviceImeiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceImei_ = value;
        onChanged();
        return this;
      }

      private Object deviceImsi_ = "";
      /**
       * <pre>
       *IMSI号
       * </pre>
       *
       * <code>optional string deviceImsi = 19;</code>
       */
      public String getDeviceImsi() {
        Object ref = deviceImsi_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceImsi_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *IMSI号
       * </pre>
       *
       * <code>optional string deviceImsi = 19;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceImsiBytes() {
        Object ref = deviceImsi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceImsi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *IMSI号
       * </pre>
       *
       * <code>optional string deviceImsi = 19;</code>
       */
      public Builder setDeviceImsi(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceImsi_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IMSI号
       * </pre>
       *
       * <code>optional string deviceImsi = 19;</code>
       */
      public Builder clearDeviceImsi() {
        
        deviceImsi_ = getDefaultInstance().getDeviceImsi();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IMSI号
       * </pre>
       *
       * <code>optional string deviceImsi = 19;</code>
       */
      public Builder setDeviceImsiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceImsi_ = value;
        onChanged();
        return this;
      }

      private Object deviceMsisdn_ = "";
      /**
       * <pre>
       *读头中的手机号
       * </pre>
       *
       * <code>optional string deviceMsisdn = 20;</code>
       */
      public String getDeviceMsisdn() {
        Object ref = deviceMsisdn_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceMsisdn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *读头中的手机号
       * </pre>
       *
       * <code>optional string deviceMsisdn = 20;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceMsisdnBytes() {
        Object ref = deviceMsisdn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceMsisdn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *读头中的手机号
       * </pre>
       *
       * <code>optional string deviceMsisdn = 20;</code>
       */
      public Builder setDeviceMsisdn(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceMsisdn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头中的手机号
       * </pre>
       *
       * <code>optional string deviceMsisdn = 20;</code>
       */
      public Builder clearDeviceMsisdn() {
        
        deviceMsisdn_ = getDefaultInstance().getDeviceMsisdn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *读头中的手机号
       * </pre>
       *
       * <code>optional string deviceMsisdn = 20;</code>
       */
      public Builder setDeviceMsisdnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceMsisdn_ = value;
        onChanged();
        return this;
      }

      private Object softwareVersion_ = "";
      /**
       * <pre>
       *软件版本
       * </pre>
       *
       * <code>optional string softwareVersion = 21;</code>
       */
      public String getSoftwareVersion() {
        Object ref = softwareVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          softwareVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *软件版本
       * </pre>
       *
       * <code>optional string softwareVersion = 21;</code>
       */
      public com.google.protobuf.ByteString
          getSoftwareVersionBytes() {
        Object ref = softwareVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          softwareVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *软件版本
       * </pre>
       *
       * <code>optional string softwareVersion = 21;</code>
       */
      public Builder setSoftwareVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        softwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *软件版本
       * </pre>
       *
       * <code>optional string softwareVersion = 21;</code>
       */
      public Builder clearSoftwareVersion() {
        
        softwareVersion_ = getDefaultInstance().getSoftwareVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *软件版本
       * </pre>
       *
       * <code>optional string softwareVersion = 21;</code>
       */
      public Builder setSoftwareVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        softwareVersion_ = value;
        onChanged();
        return this;
      }

      private Object hardwareVersion_ = "";
      /**
       * <pre>
       *硬件版本
       * </pre>
       *
       * <code>optional string hardwareVersion = 22;</code>
       */
      public String getHardwareVersion() {
        Object ref = hardwareVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          hardwareVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *硬件版本
       * </pre>
       *
       * <code>optional string hardwareVersion = 22;</code>
       */
      public com.google.protobuf.ByteString
          getHardwareVersionBytes() {
        Object ref = hardwareVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          hardwareVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *硬件版本
       * </pre>
       *
       * <code>optional string hardwareVersion = 22;</code>
       */
      public Builder setHardwareVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hardwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *硬件版本
       * </pre>
       *
       * <code>optional string hardwareVersion = 22;</code>
       */
      public Builder clearHardwareVersion() {
        
        hardwareVersion_ = getDefaultInstance().getHardwareVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *硬件版本
       * </pre>
       *
       * <code>optional string hardwareVersion = 22;</code>
       */
      public Builder setHardwareVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hardwareVersion_ = value;
        onChanged();
        return this;
      }

      private Object protocolVersion_ = "";
      /**
       * <pre>
       *协议版本
       * </pre>
       *
       * <code>optional string protocolVersion = 23;</code>
       */
      public String getProtocolVersion() {
        Object ref = protocolVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          protocolVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *协议版本
       * </pre>
       *
       * <code>optional string protocolVersion = 23;</code>
       */
      public com.google.protobuf.ByteString
          getProtocolVersionBytes() {
        Object ref = protocolVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          protocolVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *协议版本
       * </pre>
       *
       * <code>optional string protocolVersion = 23;</code>
       */
      public Builder setProtocolVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        protocolVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *协议版本
       * </pre>
       *
       * <code>optional string protocolVersion = 23;</code>
       */
      public Builder clearProtocolVersion() {
        
        protocolVersion_ = getDefaultInstance().getProtocolVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *协议版本
       * </pre>
       *
       * <code>optional string protocolVersion = 23;</code>
       */
      public Builder setProtocolVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        protocolVersion_ = value;
        onChanged();
        return this;
      }

      private Object smsVersion_ = "";
      /**
       * <pre>
       *短信版本
       * </pre>
       *
       * <code>optional string smsVersion = 24;</code>
       */
      public String getSmsVersion() {
        Object ref = smsVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          smsVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *短信版本
       * </pre>
       *
       * <code>optional string smsVersion = 24;</code>
       */
      public com.google.protobuf.ByteString
          getSmsVersionBytes() {
        Object ref = smsVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          smsVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *短信版本
       * </pre>
       *
       * <code>optional string smsVersion = 24;</code>
       */
      public Builder setSmsVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        smsVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *短信版本
       * </pre>
       *
       * <code>optional string smsVersion = 24;</code>
       */
      public Builder clearSmsVersion() {
        
        smsVersion_ = getDefaultInstance().getSmsVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *短信版本
       * </pre>
       *
       * <code>optional string smsVersion = 24;</code>
       */
      public Builder setSmsVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        smsVersion_ = value;
        onChanged();
        return this;
      }

      private int damp24G_ ;
      /**
       * <pre>
       *2.4G衰减值
       * </pre>
       *
       * <code>optional int32 damp24G = 25;</code>
       */
      public int getDamp24G() {
        return damp24G_;
      }
      /**
       * <pre>
       *2.4G衰减值
       * </pre>
       *
       * <code>optional int32 damp24G = 25;</code>
       */
      public Builder setDamp24G(int value) {
        
        damp24G_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *2.4G衰减值
       * </pre>
       *
       * <code>optional int32 damp24G = 25;</code>
       */
      public Builder clearDamp24G() {
        
        damp24G_ = 0;
        onChanged();
        return this;
      }

      private int channel24G_ ;
      /**
       * <pre>
       *2.4G通信频道
       * </pre>
       *
       * <code>optional int32 channel24G = 26;</code>
       */
      public int getChannel24G() {
        return channel24G_;
      }
      /**
       * <pre>
       *2.4G通信频道
       * </pre>
       *
       * <code>optional int32 channel24G = 26;</code>
       */
      public Builder setChannel24G(int value) {
        
        channel24G_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *2.4G通信频道
       * </pre>
       *
       * <code>optional int32 channel24G = 26;</code>
       */
      public Builder clearChannel24G() {
        
        channel24G_ = 0;
        onChanged();
        return this;
      }

      private int filterSeconds_ ;
      /**
       * <pre>
       *过滤时间
       * </pre>
       *
       * <code>optional int32 filterSeconds = 27;</code>
       */
      public int getFilterSeconds() {
        return filterSeconds_;
      }
      /**
       * <pre>
       *过滤时间
       * </pre>
       *
       * <code>optional int32 filterSeconds = 27;</code>
       */
      public Builder setFilterSeconds(int value) {
        
        filterSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *过滤时间
       * </pre>
       *
       * <code>optional int32 filterSeconds = 27;</code>
       */
      public Builder clearFilterSeconds() {
        
        filterSeconds_ = 0;
        onChanged();
        return this;
      }

      private int damp433M_ ;
      /**
       * <pre>
       *433M衰减值
       * </pre>
       *
       * <code>optional int32 damp433M = 28;</code>
       */
      public int getDamp433M() {
        return damp433M_;
      }
      /**
       * <pre>
       *433M衰减值
       * </pre>
       *
       * <code>optional int32 damp433M = 28;</code>
       */
      public Builder setDamp433M(int value) {
        
        damp433M_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *433M衰减值
       * </pre>
       *
       * <code>optional int32 damp433M = 28;</code>
       */
      public Builder clearDamp433M() {
        
        damp433M_ = 0;
        onChanged();
        return this;
      }

      private int channel433M_ ;
      /**
       * <pre>
       *433M通信频道
       * </pre>
       *
       * <code>optional int32 channel433M = 29;</code>
       */
      public int getChannel433M() {
        return channel433M_;
      }
      /**
       * <pre>
       *433M通信频道
       * </pre>
       *
       * <code>optional int32 channel433M = 29;</code>
       */
      public Builder setChannel433M(int value) {
        
        channel433M_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *433M通信频道
       * </pre>
       *
       * <code>optional int32 channel433M = 29;</code>
       */
      public Builder clearChannel433M() {
        
        channel433M_ = 0;
        onChanged();
        return this;
      }

      private long createDt_ ;
      /**
       * <pre>
       *创建时间
       * </pre>
       *
       * <code>optional int64 createDt = 30;</code>
       */
      public long getCreateDt() {
        return createDt_;
      }
      /**
       * <pre>
       *创建时间
       * </pre>
       *
       * <code>optional int64 createDt = 30;</code>
       */
      public Builder setCreateDt(long value) {
        
        createDt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建时间
       * </pre>
       *
       * <code>optional int64 createDt = 30;</code>
       */
      public Builder clearCreateDt() {
        
        createDt_ = 0L;
        onChanged();
        return this;
      }

      private long lastUpdateDt_ ;
      /**
       * <pre>
       *最后更新时间
       * </pre>
       *
       * <code>optional int64 lastUpdateDt = 31;</code>
       */
      public long getLastUpdateDt() {
        return lastUpdateDt_;
      }
      /**
       * <pre>
       *最后更新时间
       * </pre>
       *
       * <code>optional int64 lastUpdateDt = 31;</code>
       */
      public Builder setLastUpdateDt(long value) {
        
        lastUpdateDt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后更新时间
       * </pre>
       *
       * <code>optional int64 lastUpdateDt = 31;</code>
       */
      public Builder clearLastUpdateDt() {
        
        lastUpdateDt_ = 0L;
        onChanged();
        return this;
      }

      private boolean isOnline_ ;
      /**
       * <pre>
       *终端芯片是否在线
       * </pre>
       *
       * <code>optional bool isOnline = 32;</code>
       */
      public boolean getIsOnline() {
        return isOnline_;
      }
      /**
       * <pre>
       *终端芯片是否在线
       * </pre>
       *
       * <code>optional bool isOnline = 32;</code>
       */
      public Builder setIsOnline(boolean value) {
        
        isOnline_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *终端芯片是否在线
       * </pre>
       *
       * <code>optional bool isOnline = 32;</code>
       */
      public Builder clearIsOnline() {
        
        isOnline_ = false;
        onChanged();
        return this;
      }

      private Object status_ = "";
      /**
       * <pre>
       *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
       * </pre>
       *
       * <code>optional string status = 33;</code>
       */
      public String getStatus() {
        Object ref = status_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          status_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
       * </pre>
       *
       * <code>optional string status = 33;</code>
       */
      public com.google.protobuf.ByteString
          getStatusBytes() {
        Object ref = status_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          status_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
       * </pre>
       *
       * <code>optional string status = 33;</code>
       */
      public Builder setStatus(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
       * </pre>
       *
       * <code>optional string status = 33;</code>
       */
      public Builder clearStatus() {
        
        status_ = getDefaultInstance().getStatus();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0/1/2/3；0表示拒绝登陆--服务到期，1表示登陆成功，2表示拒绝登录—终端编号、IMEI已在平台有记录但SIM卡IMSI匹配不成功，3表示拒绝登录—终端和SIM卡信息未录入。
       * </pre>
       *
       * <code>optional string status = 33;</code>
       */
      public Builder setStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        status_ = value;
        onChanged();
        return this;
      }

      private long expireDt_ ;
      /**
       * <pre>
       *过期时间
       * </pre>
       *
       * <code>optional int64 expireDt = 34;</code>
       */
      public long getExpireDt() {
        return expireDt_;
      }
      /**
       * <pre>
       *过期时间
       * </pre>
       *
       * <code>optional int64 expireDt = 34;</code>
       */
      public Builder setExpireDt(long value) {
        
        expireDt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *过期时间
       * </pre>
       *
       * <code>optional int64 expireDt = 34;</code>
       */
      public Builder clearExpireDt() {
        
        expireDt_ = 0L;
        onChanged();
        return this;
      }

      private double balance_ ;
      /**
       * <pre>
       *余额
       * </pre>
       *
       * <code>optional double balance = 35;</code>
       */
      public double getBalance() {
        return balance_;
      }
      /**
       * <pre>
       *余额
       * </pre>
       *
       * <code>optional double balance = 35;</code>
       */
      public Builder setBalance(double value) {
        
        balance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *余额
       * </pre>
       *
       * <code>optional double balance = 35;</code>
       */
      public Builder clearBalance() {
        
        balance_ = 0D;
        onChanged();
        return this;
      }

      private Object operator_ = "";
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>optional string operator = 36;</code>
       */
      public String getOperator() {
        Object ref = operator_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          operator_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>optional string operator = 36;</code>
       */
      public com.google.protobuf.ByteString
          getOperatorBytes() {
        Object ref = operator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          operator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>optional string operator = 36;</code>
       */
      public Builder setOperator(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        operator_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>optional string operator = 36;</code>
       */
      public Builder clearOperator() {
        
        operator_ = getDefaultInstance().getOperator();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *运营商
       * </pre>
       *
       * <code>optional string operator = 36;</code>
       */
      public Builder setOperatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        operator_ = value;
        onChanged();
        return this;
      }

      private long simExpireDt_ ;
      /**
       * <pre>
       *SIM卡过期时间
       * </pre>
       *
       * <code>optional int64 simExpireDt = 37;</code>
       */
      public long getSimExpireDt() {
        return simExpireDt_;
      }
      /**
       * <pre>
       *SIM卡过期时间
       * </pre>
       *
       * <code>optional int64 simExpireDt = 37;</code>
       */
      public Builder setSimExpireDt(long value) {
        
        simExpireDt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *SIM卡过期时间
       * </pre>
       *
       * <code>optional int64 simExpireDt = 37;</code>
       */
      public Builder clearSimExpireDt() {
        
        simExpireDt_ = 0L;
        onChanged();
        return this;
      }

      private Object remark_ = "";
      /**
       * <pre>
       *备注
       * </pre>
       *
       * <code>optional string remark = 38;</code>
       */
      public String getRemark() {
        Object ref = remark_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          remark_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *备注
       * </pre>
       *
       * <code>optional string remark = 38;</code>
       */
      public com.google.protobuf.ByteString
          getRemarkBytes() {
        Object ref = remark_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          remark_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *备注
       * </pre>
       *
       * <code>optional string remark = 38;</code>
       */
      public Builder setRemark(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        remark_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备注
       * </pre>
       *
       * <code>optional string remark = 38;</code>
       */
      public Builder clearRemark() {
        
        remark_ = getDefaultInstance().getRemark();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备注
       * </pre>
       *
       * <code>optional string remark = 38;</code>
       */
      public Builder setRemarkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        remark_ = value;
        onChanged();
        return this;
      }

      private Object videoId_ = "";
      /**
       * <pre>
       *视频id
       * </pre>
       *
       * <code>optional string videoId = 39;</code>
       */
      public String getVideoId() {
        Object ref = videoId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          videoId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *视频id
       * </pre>
       *
       * <code>optional string videoId = 39;</code>
       */
      public com.google.protobuf.ByteString
          getVideoIdBytes() {
        Object ref = videoId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          videoId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *视频id
       * </pre>
       *
       * <code>optional string videoId = 39;</code>
       */
      public Builder setVideoId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        videoId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *视频id
       * </pre>
       *
       * <code>optional string videoId = 39;</code>
       */
      public Builder clearVideoId() {
        
        videoId_ = getDefaultInstance().getVideoId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *视频id
       * </pre>
       *
       * <code>optional string videoId = 39;</code>
       */
      public Builder setVideoIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        videoId_ = value;
        onChanged();
        return this;
      }

      private Object createBy_ = "";
      /**
       * <pre>
       *创建者
       * </pre>
       *
       * <code>optional string createBy = 40;</code>
       */
      public String getCreateBy() {
        Object ref = createBy_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          createBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *创建者
       * </pre>
       *
       * <code>optional string createBy = 40;</code>
       */
      public com.google.protobuf.ByteString
          getCreateByBytes() {
        Object ref = createBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          createBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *创建者
       * </pre>
       *
       * <code>optional string createBy = 40;</code>
       */
      public Builder setCreateBy(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建者
       * </pre>
       *
       * <code>optional string createBy = 40;</code>
       */
      public Builder clearCreateBy() {
        
        createBy_ = getDefaultInstance().getCreateBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建者
       * </pre>
       *
       * <code>optional string createBy = 40;</code>
       */
      public Builder setCreateByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createBy_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:DeviceMessage)
    }

    // @@protoc_insertion_point(class_scope:DeviceMessage)
    private static final DeviceMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DeviceMessage();
    }

    public static DeviceMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceMessage>
        PARSER = new com.google.protobuf.AbstractParser<DeviceMessage>() {
      public DeviceMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DeviceMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeviceMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<DeviceMessage> getParserForType() {
      return PARSER;
    }

    public DeviceMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DeviceMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DeviceMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014Device.proto\"\256\006\n\rDeviceMessage\022\n\n\002id\030\001" +
      " \001(\003\022\020\n\010deviceId\030\002 \001(\t\022\027\n\017deviceIdDecima" +
      "l\030\003 \001(\t\022\021\n\tcompanyId\030\004 \001(\003\022\020\n\010officeId\030\005" +
      " \001(\003\022\016\n\006areaId\030\006 \001(\003\022\022\n\ndeviceType\030\007 \001(\t" +
      "\022\022\n\ndeviceName\030\010 \001(\t\022\020\n\010latitude\030\t \001(\001\022\021" +
      "\n\tlongitude\030\n \001(\001\022\025\n\rdeviceAddress\030\013 \001(\t" +
      "\022\017\n\007battery\030\014 \001(\002\022\024\n\014isLowBattery\030\r \001(\010\022" +
      "\023\n\013temperature\030\016 \001(\002\022\031\n\021isHighTemperatur" +
      "e\030\017 \001(\010\022\025\n\rbatteryStatus\030\020 \001(\005\022\030\n\020isConn" +
      "ectBattery\030\021 \001(\005\022\022\n\ndeviceImei\030\022 \001(\t\022\022\n\n",
      "deviceImsi\030\023 \001(\t\022\024\n\014deviceMsisdn\030\024 \001(\t\022\027" +
      "\n\017softwareVersion\030\025 \001(\t\022\027\n\017hardwareVersi" +
      "on\030\026 \001(\t\022\027\n\017protocolVersion\030\027 \001(\t\022\022\n\nsms" +
      "Version\030\030 \001(\t\022\017\n\007damp24G\030\031 \001(\005\022\022\n\nchanne" +
      "l24G\030\032 \001(\005\022\025\n\rfilterSeconds\030\033 \001(\005\022\020\n\010dam" +
      "p433M\030\034 \001(\005\022\023\n\013channel433M\030\035 \001(\005\022\020\n\010crea" +
      "teDt\030\036 \001(\003\022\024\n\014lastUpdateDt\030\037 \001(\003\022\020\n\010isOn" +
      "line\030  \001(\010\022\016\n\006status\030! \001(\t\022\020\n\010expireDt\030\"" +
      " \001(\003\022\017\n\007balance\030# \001(\001\022\020\n\010operator\030$ \001(\t\022" +
      "\023\n\013simExpireDt\030% \001(\003\022\016\n\006remark\030& \001(\t\022\017\n\007",
      "videoId\030\' \001(\t\022\020\n\010createBy\030( \001(\tB\'\n\035com.y" +
      "zh.rfid.app.responseB\006Deviceb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_DeviceMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DeviceMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DeviceMessage_descriptor,
        new String[] { "Id", "DeviceId", "DeviceIdDecimal", "CompanyId", "OfficeId", "AreaId", "DeviceType", "DeviceName", "Latitude", "Longitude", "DeviceAddress", "Battery", "IsLowBattery", "Temperature", "IsHighTemperature", "BatteryStatus", "IsConnectBattery", "DeviceImei", "DeviceImsi", "DeviceMsisdn", "SoftwareVersion", "HardwareVersion", "ProtocolVersion", "SmsVersion", "Damp24G", "Channel24G", "FilterSeconds", "Damp433M", "Channel433M", "CreateDt", "LastUpdateDt", "IsOnline", "Status", "ExpireDt", "Balance", "Operator", "SimExpireDt", "Remark", "VideoId", "CreateBy", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
