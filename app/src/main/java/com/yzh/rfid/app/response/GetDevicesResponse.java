// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetDevicesResponse.proto

package com.yzh.rfid.app.response;

public final class GetDevicesResponse {
  private GetDevicesResponse() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GetDevicesResponseMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetDevicesResponseMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ErrorMessage errorMsg = 1;</code>
     */
    boolean hasErrorMsg();
    /**
     * <code>optional .ErrorMessage errorMsg = 1;</code>
     */
    com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage getErrorMsg();
    /**
     * <code>optional .ErrorMessage errorMsg = 1;</code>
     */
    com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessageOrBuilder getErrorMsgOrBuilder();

    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    java.util.List<com.yzh.rfid.app.response.Device.DeviceMessage> 
        getDeviceList();
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    com.yzh.rfid.app.response.Device.DeviceMessage getDevice(int index);
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    int getDeviceCount();
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    java.util.List<? extends com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder> 
        getDeviceOrBuilderList();
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder getDeviceOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code GetDevicesResponseMessage}
   */
  public  static final class GetDevicesResponseMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetDevicesResponseMessage)
      GetDevicesResponseMessageOrBuilder {
    // Use GetDevicesResponseMessage.newBuilder() to construct.
    private GetDevicesResponseMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetDevicesResponseMessage() {
      device_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GetDevicesResponseMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.Builder subBuilder = null;
              if (errorMsg_ != null) {
                subBuilder = errorMsg_.toBuilder();
              }
              errorMsg_ = input.readMessage(com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(errorMsg_);
                errorMsg_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                device_ = new java.util.ArrayList<com.yzh.rfid.app.response.Device.DeviceMessage>();
                mutable_bitField0_ |= 0x00000002;
              }
              device_.add(
                  input.readMessage(com.yzh.rfid.app.response.Device.DeviceMessage.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          device_ = java.util.Collections.unmodifiableList(device_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.yzh.rfid.app.response.GetDevicesResponse.internal_static_GetDevicesResponseMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.yzh.rfid.app.response.GetDevicesResponse.internal_static_GetDevicesResponseMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage.class, com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage.Builder.class);
    }

    private int bitField0_;
    public static final int ERRORMSG_FIELD_NUMBER = 1;
    private com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage errorMsg_;
    /**
     * <code>optional .ErrorMessage errorMsg = 1;</code>
     */
    public boolean hasErrorMsg() {
      return errorMsg_ != null;
    }
    /**
     * <code>optional .ErrorMessage errorMsg = 1;</code>
     */
    public com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage getErrorMsg() {
      return errorMsg_ == null ? com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.getDefaultInstance() : errorMsg_;
    }
    /**
     * <code>optional .ErrorMessage errorMsg = 1;</code>
     */
    public com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessageOrBuilder getErrorMsgOrBuilder() {
      return getErrorMsg();
    }

    public static final int DEVICE_FIELD_NUMBER = 2;
    private java.util.List<com.yzh.rfid.app.response.Device.DeviceMessage> device_;
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    public java.util.List<com.yzh.rfid.app.response.Device.DeviceMessage> getDeviceList() {
      return device_;
    }
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    public java.util.List<? extends com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder> 
        getDeviceOrBuilderList() {
      return device_;
    }
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    public int getDeviceCount() {
      return device_.size();
    }
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    public com.yzh.rfid.app.response.Device.DeviceMessage getDevice(int index) {
      return device_.get(index);
    }
    /**
     * <code>repeated .DeviceMessage device = 2;</code>
     */
    public com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder getDeviceOrBuilder(
        int index) {
      return device_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (errorMsg_ != null) {
        output.writeMessage(1, getErrorMsg());
      }
      for (int i = 0; i < device_.size(); i++) {
        output.writeMessage(2, device_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (errorMsg_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getErrorMsg());
      }
      for (int i = 0; i < device_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, device_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage)) {
        return super.equals(obj);
      }
      com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage other = (com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage) obj;

      boolean result = true;
      result = result && (hasErrorMsg() == other.hasErrorMsg());
      if (hasErrorMsg()) {
        result = result && getErrorMsg()
            .equals(other.getErrorMsg());
      }
      result = result && getDeviceList()
          .equals(other.getDeviceList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasErrorMsg()) {
        hash = (37 * hash) + ERRORMSG_FIELD_NUMBER;
        hash = (53 * hash) + getErrorMsg().hashCode();
      }
      if (getDeviceCount() > 0) {
        hash = (37 * hash) + DEVICE_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GetDevicesResponseMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetDevicesResponseMessage)
        com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.yzh.rfid.app.response.GetDevicesResponse.internal_static_GetDevicesResponseMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.yzh.rfid.app.response.GetDevicesResponse.internal_static_GetDevicesResponseMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage.class, com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage.Builder.class);
      }

      // Construct using com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDeviceFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorMsgBuilder_ == null) {
          errorMsg_ = null;
        } else {
          errorMsg_ = null;
          errorMsgBuilder_ = null;
        }
        if (deviceBuilder_ == null) {
          device_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          deviceBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.yzh.rfid.app.response.GetDevicesResponse.internal_static_GetDevicesResponseMessage_descriptor;
      }

      public com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage getDefaultInstanceForType() {
        return com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage.getDefaultInstance();
      }

      public com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage build() {
        com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage buildPartial() {
        com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage result = new com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorMsgBuilder_ == null) {
          result.errorMsg_ = errorMsg_;
        } else {
          result.errorMsg_ = errorMsgBuilder_.build();
        }
        if (deviceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            device_ = java.util.Collections.unmodifiableList(device_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.device_ = device_;
        } else {
          result.device_ = deviceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage) {
          return mergeFrom((com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage other) {
        if (other == com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage.getDefaultInstance()) return this;
        if (other.hasErrorMsg()) {
          mergeErrorMsg(other.getErrorMsg());
        }
        if (deviceBuilder_ == null) {
          if (!other.device_.isEmpty()) {
            if (device_.isEmpty()) {
              device_ = other.device_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDeviceIsMutable();
              device_.addAll(other.device_);
            }
            onChanged();
          }
        } else {
          if (!other.device_.isEmpty()) {
            if (deviceBuilder_.isEmpty()) {
              deviceBuilder_.dispose();
              deviceBuilder_ = null;
              device_ = other.device_;
              bitField0_ = (bitField0_ & ~0x00000002);
              deviceBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDeviceFieldBuilder() : null;
            } else {
              deviceBuilder_.addAllMessages(other.device_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage errorMsg_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage, com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.Builder, com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessageOrBuilder> errorMsgBuilder_;
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      public boolean hasErrorMsg() {
        return errorMsgBuilder_ != null || errorMsg_ != null;
      }
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      public com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage getErrorMsg() {
        if (errorMsgBuilder_ == null) {
          return errorMsg_ == null ? com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.getDefaultInstance() : errorMsg_;
        } else {
          return errorMsgBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      public Builder setErrorMsg(com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage value) {
        if (errorMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          errorMsg_ = value;
          onChanged();
        } else {
          errorMsgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      public Builder setErrorMsg(
          com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.Builder builderForValue) {
        if (errorMsgBuilder_ == null) {
          errorMsg_ = builderForValue.build();
          onChanged();
        } else {
          errorMsgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      public Builder mergeErrorMsg(com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage value) {
        if (errorMsgBuilder_ == null) {
          if (errorMsg_ != null) {
            errorMsg_ =
              com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.newBuilder(errorMsg_).mergeFrom(value).buildPartial();
          } else {
            errorMsg_ = value;
          }
          onChanged();
        } else {
          errorMsgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      public Builder clearErrorMsg() {
        if (errorMsgBuilder_ == null) {
          errorMsg_ = null;
          onChanged();
        } else {
          errorMsg_ = null;
          errorMsgBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      public com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.Builder getErrorMsgBuilder() {
        
        onChanged();
        return getErrorMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      public com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessageOrBuilder getErrorMsgOrBuilder() {
        if (errorMsgBuilder_ != null) {
          return errorMsgBuilder_.getMessageOrBuilder();
        } else {
          return errorMsg_ == null ?
              com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.getDefaultInstance() : errorMsg_;
        }
      }
      /**
       * <code>optional .ErrorMessage errorMsg = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage, com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.Builder, com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessageOrBuilder> 
          getErrorMsgFieldBuilder() {
        if (errorMsgBuilder_ == null) {
          errorMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage, com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessage.Builder, com.yzh.rfid.app.response.ErrorMessageResponse.ErrorMessageOrBuilder>(
                  getErrorMsg(),
                  getParentForChildren(),
                  isClean());
          errorMsg_ = null;
        }
        return errorMsgBuilder_;
      }

      private java.util.List<com.yzh.rfid.app.response.Device.DeviceMessage> device_ =
        java.util.Collections.emptyList();
      private void ensureDeviceIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          device_ = new java.util.ArrayList<com.yzh.rfid.app.response.Device.DeviceMessage>(device_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.yzh.rfid.app.response.Device.DeviceMessage, com.yzh.rfid.app.response.Device.DeviceMessage.Builder, com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder> deviceBuilder_;

      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public java.util.List<com.yzh.rfid.app.response.Device.DeviceMessage> getDeviceList() {
        if (deviceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(device_);
        } else {
          return deviceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public int getDeviceCount() {
        if (deviceBuilder_ == null) {
          return device_.size();
        } else {
          return deviceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public com.yzh.rfid.app.response.Device.DeviceMessage getDevice(int index) {
        if (deviceBuilder_ == null) {
          return device_.get(index);
        } else {
          return deviceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder setDevice(
          int index, com.yzh.rfid.app.response.Device.DeviceMessage value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceIsMutable();
          device_.set(index, value);
          onChanged();
        } else {
          deviceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder setDevice(
          int index, com.yzh.rfid.app.response.Device.DeviceMessage.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          device_.set(index, builderForValue.build());
          onChanged();
        } else {
          deviceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder addDevice(com.yzh.rfid.app.response.Device.DeviceMessage value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceIsMutable();
          device_.add(value);
          onChanged();
        } else {
          deviceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder addDevice(
          int index, com.yzh.rfid.app.response.Device.DeviceMessage value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceIsMutable();
          device_.add(index, value);
          onChanged();
        } else {
          deviceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder addDevice(
          com.yzh.rfid.app.response.Device.DeviceMessage.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          device_.add(builderForValue.build());
          onChanged();
        } else {
          deviceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder addDevice(
          int index, com.yzh.rfid.app.response.Device.DeviceMessage.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          device_.add(index, builderForValue.build());
          onChanged();
        } else {
          deviceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder addAllDevice(
          Iterable<? extends com.yzh.rfid.app.response.Device.DeviceMessage> values) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, device_);
          onChanged();
        } else {
          deviceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder clearDevice() {
        if (deviceBuilder_ == null) {
          device_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          deviceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public Builder removeDevice(int index) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          device_.remove(index);
          onChanged();
        } else {
          deviceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public com.yzh.rfid.app.response.Device.DeviceMessage.Builder getDeviceBuilder(
          int index) {
        return getDeviceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder getDeviceOrBuilder(
          int index) {
        if (deviceBuilder_ == null) {
          return device_.get(index);  } else {
          return deviceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public java.util.List<? extends com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder> 
           getDeviceOrBuilderList() {
        if (deviceBuilder_ != null) {
          return deviceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(device_);
        }
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public com.yzh.rfid.app.response.Device.DeviceMessage.Builder addDeviceBuilder() {
        return getDeviceFieldBuilder().addBuilder(
            com.yzh.rfid.app.response.Device.DeviceMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public com.yzh.rfid.app.response.Device.DeviceMessage.Builder addDeviceBuilder(
          int index) {
        return getDeviceFieldBuilder().addBuilder(
            index, com.yzh.rfid.app.response.Device.DeviceMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .DeviceMessage device = 2;</code>
       */
      public java.util.List<com.yzh.rfid.app.response.Device.DeviceMessage.Builder> 
           getDeviceBuilderList() {
        return getDeviceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.yzh.rfid.app.response.Device.DeviceMessage, com.yzh.rfid.app.response.Device.DeviceMessage.Builder, com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder> 
          getDeviceFieldBuilder() {
        if (deviceBuilder_ == null) {
          deviceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.yzh.rfid.app.response.Device.DeviceMessage, com.yzh.rfid.app.response.Device.DeviceMessage.Builder, com.yzh.rfid.app.response.Device.DeviceMessageOrBuilder>(
                  device_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          device_ = null;
        }
        return deviceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:GetDevicesResponseMessage)
    }

    // @@protoc_insertion_point(class_scope:GetDevicesResponseMessage)
    private static final com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage();
    }

    public static com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetDevicesResponseMessage>
        PARSER = new com.google.protobuf.AbstractParser<GetDevicesResponseMessage>() {
      public GetDevicesResponseMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetDevicesResponseMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetDevicesResponseMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetDevicesResponseMessage> getParserForType() {
      return PARSER;
    }

    public com.yzh.rfid.app.response.GetDevicesResponse.GetDevicesResponseMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetDevicesResponseMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetDevicesResponseMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\030GetDevicesResponse.proto\032\032ErrorMessage" +
      "Response.proto\032\014Device.proto\"\\\n\031GetDevic" +
      "esResponseMessage\022\037\n\010errorMsg\030\001 \001(\0132\r.Er" +
      "rorMessage\022\036\n\006device\030\002 \003(\0132\016.DeviceMessa" +
      "geB3\n\035com.yzh.rfid.app.responseB\022Get" +
      "DevicesResponseb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.yzh.rfid.app.response.ErrorMessageResponse.getDescriptor(),
          com.yzh.rfid.app.response.Device.getDescriptor(),
        }, assigner);
    internal_static_GetDevicesResponseMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GetDevicesResponseMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetDevicesResponseMessage_descriptor,
        new String[] { "ErrorMsg", "Device", });
    com.yzh.rfid.app.response.ErrorMessageResponse.getDescriptor();
    com.yzh.rfid.app.response.Device.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
